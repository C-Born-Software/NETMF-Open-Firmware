//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#ifndef _GHIELECTRONICS_OSH_NETMF_HARDWARE_H_
#define _GHIELECTRONICS_OSH_NETMF_HARDWARE_H_

#include <TinyCLR_Interop.h>
struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_AnalogIn
{
    static const int FIELD__channel = 1;
    static const int FIELD__disposed = 2;
    static const int FIELD__min = 3;
    static const int FIELD__max = 4;

    TINYCLR_NATIVE_DECLARE(Dispose___VOID);
    TINYCLR_NATIVE_DECLARE(Finalize___VOID);
    TINYCLR_NATIVE_DECLARE(_ctor___VOID__GHIElectronicsOSHNETMFHardwareAnalogInPin);
    TINYCLR_NATIVE_DECLARE(SetLinearScale___VOID__I4__I4);
    TINYCLR_NATIVE_DECLARE(Read___I4);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_LowLevel_AddressSpace
{
    TINYCLR_NATIVE_DECLARE(Write___STATIC__VOID__U4__SZARRAY_U1__I4__I4);
    TINYCLR_NATIVE_DECLARE(Read___STATIC__VOID__U4__SZARRAY_U1__I4__I4);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_LowLevel_Register
{
    static const int FIELD__address = 1;

    TINYCLR_NATIVE_DECLARE(_ctor___VOID__U4);
    TINYCLR_NATIVE_DECLARE(Write___VOID__U4);
    TINYCLR_NATIVE_DECLARE(Read___U4);
    TINYCLR_NATIVE_DECLARE(SetBits___VOID__U4);
    TINYCLR_NATIVE_DECLARE(ClearBits___VOID__U4);
    TINYCLR_NATIVE_DECLARE(ToggleBits___VOID__U4);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_PWM
{
    static const int FIELD__disposed = 1;
    static const int FIELD__channel = 2;

    TINYCLR_NATIVE_DECLARE(Dispose___VOID);
    TINYCLR_NATIVE_DECLARE(Finalize___VOID);
    TINYCLR_NATIVE_DECLARE(_ctor___VOID__GHIElectronicsOSHNETMFHardwarePWMPin);
    TINYCLR_NATIVE_DECLARE(Set___VOID__I4__U1);
    TINYCLR_NATIVE_DECLARE(Set___VOID__BOOLEAN);
    TINYCLR_NATIVE_DECLARE(SetPulse___VOID__U4__U4);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_SoftwareI2CBus
{
    static const int FIELD__disposed = 1;
    static const int FIELD__clockPin = 2;
    static const int FIELD__dataPin = 3;

    TINYCLR_NATIVE_DECLARE(NativeI2CWriteRead___STATIC__BOOLEAN__I4__I4__I4__U2__SZARRAY_U1__I4__I4__SZARRAY_U1__I4__I4__BYREF_I4__BYREF_I4);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_StorageDev
{
    TINYCLR_NATIVE_DECLARE(MountSD___STATIC__VOID);
    TINYCLR_NATIVE_DECLARE(MountSD___STATIC__VOID__U4);
    TINYCLR_NATIVE_DECLARE(UnmountSD___STATIC__VOID);

    //--//

};

struct Library_GHIElectronics_OSH_NETMF_Hardware_GHIElectronics_OSH_NETMF_Hardware_SoftwareI2CBus__I2CDevice
{
    static const int FIELD__bus = 1;
    static const int FIELD__address = 2;
    static const int FIELD__clockRateKHz = 3;


    //--//

};



extern const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_GHIElectronics_OSH_NETMF_Hardware;

#endif  //_GHIELECTRONICS_OSH_NETMF_HARDWARE_H_
