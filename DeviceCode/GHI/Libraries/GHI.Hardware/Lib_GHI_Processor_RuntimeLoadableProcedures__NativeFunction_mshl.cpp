//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#include "Lib.h"
#include "Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction.h"

using namespace GHI::Processor;


HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U4__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_UINT32 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_I4__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_INT32 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_R4__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_float param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_float_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_I2__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_INT16 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT16_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U2__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_UINT16 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT16_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_CHAR__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_CHAR param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_CHAR_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_UINT8 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_Lib_GHI_Processor_RuntimeLoadableProcedures__NativeFunction::InvokeNative___STATIC__I4__U4__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_U1__SZARRAY_I1__I4__SZARRAY_U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        CLR_RT_TypedArray_UINT8 param1;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 1, param1 ) );

        CLR_RT_TypedArray_UINT8 param2;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 2, param2 ) );

        CLR_RT_TypedArray_UINT8 param3;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 3, param3 ) );

        CLR_RT_TypedArray_UINT8 param4;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 4, param4 ) );

        CLR_RT_TypedArray_UINT8 param5;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 5, param5 ) );

        CLR_RT_TypedArray_UINT8 param6;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 6, param6 ) );

        CLR_RT_TypedArray_UINT8 param7;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 7, param7 ) );

        CLR_RT_TypedArray_UINT8 param8;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT8_ARRAY( stack, 8, param8 ) );

        CLR_RT_TypedArray_INT8 param9;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT8_ARRAY( stack, 9, param9 ) );

        INT32 param10;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_INT32( stack, 10, param10 ) );

        CLR_RT_TypedArray_UINT32 param11;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32_ARRAY( stack, 11, param11 ) );

        INT32 retVal = RuntimeLoadableProcedures_NativeFunction::InvokeNative( param0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_INT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}
